{
    "parserOptions": {
        "ecmaVersion": 2021
    },
    "extends": "eslint:recommended",
    "env": {
        "es2021": true
    },
    // Things that are not from eslint:recommended or it's added to override their default settings in eslint:recommended
    "rules": {
        // Possible problems
        "getter-return": ["error", { "allowImplicit": false }],
        "no-constructor-return": "error",
        "no-duplicate-imports": "warn",
        "no-self-compare": "error",
        "no-template-curly-in-string": "error",
        "no-unmodified-loop-condition": "error",
        "no-unreachable-loop": "error",
        "no-unused-private-class-members": "error",
        "no-unused-vars": ["error", {
            "argsIgnorePattern": "^_",
            "args": "after-used",
            "caughtErrors": "all",
            "caughtErrorsIgnorePattern": "^_"
        }],
        "no-use-before-define": ["error", { "functions": false }],

        // Suggestions
        "accessor-pairs": "warn",
        "arrow-body-style": "warn",
        "block-scoped-var": "error",
        "camelcase": "warn", // TODO: Test this, see if it's consistent with the @typescript-eslint/naming-convention rule
        "class-methods-use-this": ["warn", { "enforceForClassFields": false }],
        "consistent-return": "warn",
        "consistent-this": ["warn", "self"],
        "curly": ["error", "multi-line", "consistent"],
        "default-case": "warn",
        "default-case-last": "warn",
        "default-param-last": "warn",
        "dot-notation": ["error", {
            "allowKeywords": true,
            "allowPattern": "(^[A-Z])|(^[a-z]+(_[a-z]+)+$)"
        }],
        "eqeqeq": ["error", "smart"],
        "func-name-matching": ["warn", "always"],
        "func-names": ["warn", "as-needed"],
        "func-style": ["warn", "declaration", { "allowArrowFunctions": true }], // TODO: Test this too.
        "grouped-accessor-pairs": ["warn", "getBeforeSet"],
        "guard-for-in": "warn",
        "max-classes-per-file": ["error", { "max": 3 }], // TODO: Reconsider this?,
        "max-depth": ["warn", { "max": 4 }],
        "max-lines": ["warn", { "max": 300, "skipBlankLines": true, "skipComments": true }],
        "max-nested-callbacks": ["warn", { "max": 10 }],
        "max-params": ["warn", { "max": 6 }],
        "multiline-comment-style": ["warn", "starred-block"],
        "no-alert": "warn",
        "no-array-constructor": "warn",
        "no-caller": "error",
        "no-case-declarations": "error",
        "no-else-return": "error",
        "no-empty": "warn",
        "no-empty-function": "warn",
        "no-eq-null": "warn",
        "no-eval": "warn",
        "no-extend-native": "error",
        "no-extra-bind": "warn",
        "no-extra-label": "error",
        "no-floating-decimal": "error",
        "no-implicit-coercion": "error",
        "no-implied-eval": "error",
        "no-invalid-this": "error",
        "no-iterator": "error",
        "no-label-var": "error",
        "no-lonely-if": "error",
        "no-loop-func": "warn",
        "no-mixed-operators": "error",
        "no-multi-assign": "warn",
        "no-multi-str": "warn",
        "no-negated-condition": "error",
        "no-nested-ternary": "warn",
        "no-new-func": "warn",
        "no-octal-escape": "warn",
        "no-param-reassign": "warn",
        "no-proto": "error",
        "no-regex-spaces": "warn",
        "no-return-assign": "error",
        "no-return-await": "error",
        "no-script-url": "warn",
        "no-sequences": "error",
        "no-throw-literal": "error",
        "no-undef-init": "warn",
        "no-unneeded-ternary": "warn",
        "no-unused-expressions": "warn",
        "no-useless-computed-key": "warn",
        "no-useless-concat": "warn",
        "no-useless-constructor": "warn",
        "no-useless-rename": "warn",
        "no-useless-return": "warn",
        "no-var": "error",
        "object-shorthand": "warn",
        "one-var": ["error", "never"],
        "one-var-declaration-per-line": "off",
        "operator-assignment": ["warn", "always"],
        "prefer-arrow-callback": "error",
        "prefer-const": ["error", { "destructuring": "all" }],
        "prefer-named-capture-group": "warn",
        "prefer-object-has-own": "off", // TODO: Turn this to warn after transitioning to ES2022
        "prefer-object-spread": "warn",
        "prefer-promise-reject-errors": ["warn", { "allowEmptyReject": true }],
        "prefer-regex-literals": ["warn", { "disallowRedundantWrapping": true }],
        "prefer-rest-params": "warn",
        "prefer-spread": "warn",
        "prefer-template": "error",
        "quote-props": ["warn", "as-needed"],
        "radix": ["warn", "as-needed"],
        "require-await": "warn",
        "sort-imports": "off", // TODO: Consider this?
        "spaced-comment": ["warn", "always"],
        "strict": ["error", "never"],
        "symbol-description": "warn",
        "yoda": "error",

        // Layout & Formatting // TODO: Reconsider the severity of the rule (warn or error)
        "array-bracket-newline": ["warn", "consistent"],
        "array-bracket-spacing": ["warn", "never", { "singleValue": false, "objectsInArrays": false, "arraysInArrays": false }],
        "array-element-newline": ["warn", "consistent", { "multiline": true, "minItems": 6 }],
        "arrow-parens": ["warn", "as-needed", { "requireForBlockBody": false }],
        "arrow-spacing": ["error", { "before": true, "after": true }],
        "block-spacing": ["error", "always"],
        "brace-style": ["error", "1tbs", { "allowSingleLine": true }],
        "comma-dangle": ["error", "never"],
        "comma-spacing": ["error", { "before": false, "after": true }],
        "comma-style": ["error", "last"],
        "computed-property-spacing": ["error", "never"],
        "dot-location": ["error", "property"],
        "eol-last": ["warn", "always"],
        "func-call-spacing": ["error", "never"],
        "function-call-argument-newline": ["error", "consistent"],
        "function-paren-newline": ["error", "consistent"],
        "generator-star-spacing": ["warn", "both"],
        "implicit-arrow-linebreak": ["error", "beside"],
        "indent": ["error", 4, { "SwitchCase": 1 }], // TODO: Reconsider this.
        "jsx-quotes": ["error", "prefer-double"],
        "key-spacing": ["error", { "beforeColon": false, "afterColon": true, "mode": "strict"}],
        "keyword-spacing": ["error", { "before": true, "after": true }],
        "linebreak-style": ["warn", "unix"],
        "lines-around-comment": "off", // TODO: Consider this
        "lines-between-class-members": ["error", "always", { "exceptAfterSingleLine": true }],
        "max-len": "off", // TODO: IMPORTANT ⚠️ CONSIDER THIS
        "max-statements-per-line": ["error", { "max": 3 }],
        "multiline-ternary": ["error", "always-multiline"],
        "new-parens": "error",
        "newline-per-chained-call": ["error", { "ignoreChainWithDepth": 3 }],
        "no-extra-parens": "off", // TODO: Consider this?
        "no-mixed-spaces-and-tabs": ["error", "smart-tabs"],
        "no-multi-spaces": ["error", { "ignoreEOLComments": true }],
        "no-multiple-empty-lines": "error",
        "no-trailing-spaces": "warn",
        "no-whitespace-before-property": "error",
        "nonblock-statement-body-position": ["warn", "beside"], // TODO: Test this and reconsider?
        "object-curly-newline": ["error", { "multiline": true, "consistent": true }],
        "object-curly-spacing": ["error", "always"],
        "object-property-newline": "off", // TODO: Consider this
        "operator-linebreak": ["error", "after", {
            "overrides": {
                "?": "before",
                ":": "before"
            }
        }],
        "padded-blocks": ["error", "never"],
        "padding-line-between-statements": "off", // TODO: Consider this?
        "quotes": ["warn", "double", { "avoidEscape": true, "allowTemplateLiterals": true }],
        "rest-spread-spacing": ["error", "never"],
        "semi": ["error", "always", { "omitLastInOneLineBlock": false }],
        "semi-spacing": ["error", { "before": false, "after": true }],
        "semi-style": ["error", "last"],
        "space-before-blocks": ["error", "always"],
        "space-before-function-paren": ["error", { "anonymous": "always", "named": "never", "asyncArrow": "always" }],
        "space-in-parens": ["error", "never"],
        "space-infix-ops": ["error", { "int32Hint": true }],
        "space-unary-ops": ["error", { "words": true, "nonwords": false }],
        "switch-colon-spacing": ["error", { "after": true, "before": false}],
        "template-curly-spacing": ["error", "never"],
        "template-tag-spacing": ["error", "never"],
        "unicode-bom": ["warn", "never"],
        "wrap-iife": ["error", "inside"],
        "wrap-regex": "warn",
        "yield-star-spacing": ["warn", "both"]
    }
}
